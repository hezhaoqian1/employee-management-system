<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.ems.mapper.EmployeeMapper">
    
    <resultMap id="BaseResultMap" type="com.company.ems.entity.Employee">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="employee_no" property="employeeNo"/>
        <result column="organization_id" property="organizationId"/>
        <result column="phone" property="phone"/>
        <result column="email" property="email"/>
        <result column="gender" property="gender"/>
        <result column="position" property="position"/>
        <result column="department" property="department"/>
        <result column="hire_date" property="hireDate"/>
        <result column="birthday" property="birthday"/>
        <result column="id_card" property="idCard"/>
        <result column="address" property="address"/>
        <result column="emergency_contact" property="emergencyContact"/>
        <result column="emergency_phone" property="emergencyPhone"/>
        <result column="salary" property="salary"/>
        <result column="status" property="status"/>
        <result column="created_time" property="createdTime"/>
        <result column="updated_time" property="updatedTime"/>
    </resultMap>

    <resultMap id="EmployeeWithOrganizationMap" type="com.company.ems.entity.Employee" extends="BaseResultMap">
        <association property="organization" javaType="com.company.ems.entity.Organization">
            <id column="org_id" property="id"/>
            <result column="org_name" property="name"/>
            <result column="org_code" property="code"/>
        </association>
    </resultMap>

    <sql id="Base_Column_List">
        id, name, employee_no, organization_id, phone, email, gender, position, department, 
        hire_date, birthday, id_card, address, emergency_contact, emergency_phone, salary, 
        status, created_time, updated_time
    </sql>

    <sql id="Employee_Organization_Column_List">
        e.id, e.name, e.employee_no, e.organization_id, e.phone, e.email, e.gender, e.position, 
        e.department, e.hire_date, e.birthday, e.id_card, e.address, e.emergency_contact, 
        e.emergency_phone, e.salary, e.status, e.created_time, e.updated_time,
        o.id as org_id, o.name as org_name, o.code as org_code
    </sql>

    <select id="selectAll" resultMap="EmployeeWithOrganizationMap">
        SELECT <include refid="Employee_Organization_Column_List"/>
        FROM employee e
        LEFT JOIN organization o ON e.organization_id = o.id
        WHERE e.status IN (1, 3)
        ORDER BY e.created_time DESC
    </select>

    <select id="selectByOrganizationId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM employee
        WHERE organization_id = #{organizationId} AND status IN (1, 3)
        ORDER BY created_time DESC
    </select>

    <select id="selectById" resultMap="EmployeeWithOrganizationMap">
        SELECT <include refid="Employee_Organization_Column_List"/>
        FROM employee e
        LEFT JOIN organization o ON e.organization_id = o.id
        WHERE e.id = #{id}
    </select>

    <select id="selectByEmployeeNo" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM employee
        WHERE employee_no = #{employeeNo}
    </select>

    <select id="selectByIds" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM employee
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND status IN (1, 3)
    </select>

    <select id="selectByCondition" resultMap="EmployeeWithOrganizationMap">
        SELECT <include refid="Employee_Organization_Column_List"/>
        FROM employee e
        LEFT JOIN organization o ON e.organization_id = o.id
        WHERE 1=1
        <if test="name != null and name != ''">
            AND e.name LIKE CONCAT('%', #{name}, '%')
        </if>
        <if test="organizationId != null">
            AND e.organization_id = #{organizationId}
        </if>
        <if test="status != null">
            AND e.status = #{status}
        </if>
        ORDER BY e.created_time DESC
    </select>

    <insert id="insert" parameterType="com.company.ems.entity.Employee" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO employee (
            name, employee_no, organization_id, phone, email, gender, position, department,
            hire_date, birthday, id_card, address, emergency_contact, emergency_phone, 
            salary, status
        ) VALUES (
            #{name}, #{employeeNo}, #{organizationId}, #{phone}, #{email}, #{gender}, 
            #{position}, #{department}, #{hireDate}, #{birthday}, #{idCard}, #{address}, 
            #{emergencyContact}, #{emergencyPhone}, #{salary}, #{status}
        )
    </insert>

    <update id="updateById" parameterType="com.company.ems.entity.Employee">
        UPDATE employee
        SET name = #{name},
            employee_no = #{employeeNo},
            organization_id = #{organizationId},
            phone = #{phone},
            email = #{email},
            gender = #{gender},
            position = #{position},
            department = #{department},
            hire_date = #{hireDate},
            birthday = #{birthday},
            id_card = #{idCard},
            address = #{address},
            emergency_contact = #{emergencyContact},
            emergency_phone = #{emergencyPhone},
            salary = #{salary},
            status = #{status}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        UPDATE employee SET status = 2 WHERE id = #{id}
    </delete>

</mapper>